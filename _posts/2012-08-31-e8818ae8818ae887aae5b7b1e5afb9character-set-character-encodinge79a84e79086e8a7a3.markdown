---
comments: true
date: 2012-08-31 23:21:59
layout: post
slug: '%e8%81%8a%e8%81%8a%e8%87%aa%e5%b7%b1%e5%af%b9character-set-character-encoding%e7%9a%84%e7%90%86%e8%a7%a3'
title: 聊聊自己对character set, character encoding的理解
wordpress_id: 146
categories:
- Misc
tags:
- 编码
---

简洁点说，也不复杂了。

字符集(character set): 就是包含一个个已经编好号的并排好序的字符对象(拿一些中文字符集说，可以想成一个个贴了数字编号的“中文汉字”，按照某种排队方式排列整齐)的集合。不同的编号方式，排列方式，字符对象的个数等等构成的集合就导致了某种文字的多种字符集，如中文中的GB, GBK等等。

而我们把字符集中的字符对象的编号称为字符码(code point)。不得不说这英文名有点蛋疼:)。

但是，有了字符集，我们在记事本中编辑书写文字后保存时，一个个汉字是如何存储在硬盘中呢？

首先，我们不可能象码砖样把“汉字的图像”堆积起来然后保存在硬盘中，那样生成的文件太大，浪费资源，而且你想换字体也是不可能了。
那怎么办呢？既然有字符集，我们把每个字符的字符码（一种数字编号）保存起来不就可以了？！这样读取文本的时候，再把字符码与一个个图像字体对应起来然后显示出来就ok了。这也就是ascii, gb2312等字符集的实际运用方式。
不过，大名鼎鼎的Unicode字符集中可以包含的字符数非常多（这可是包容全球！），如果我们象上面这种用字符码直接保存的方式来存储文件的话，必须保证每个字符都是用个32位的数字保存，例如第一个字符用00000001来表示，最后一个用FFFFFFFF来表示。可是假如，我门只需用到1万个汉字，那么真得有必要每个字符都用32位表示吗？答案是否定的。但是，却必须得用32位。
那么，这次该如何改进？
答案：利用字符编码(character encoding)。我们搞java开发不是提倡MVC分层架构吗，同样，在字符码的基础上，我们可以再对其编码，形成新的一层结构，即对字符码编码后生成的字节流，专用于存储在硬盘中。读取文件时，先解码成字符码，然后字符码再对应成图像字符，显示出来。我们称这种将字符集中的字符码映射为字节流的编码方式叫字符编码。例如UTF-8，UTF-16就是字符编码。UTF-8是种变长的编码方式，如果是英文，就用一字节保存，如果是汉字，就用两字节保存，这样，大大减少了需要存储的文件大小。

这样，就又有一个新的问题出来了。那之前所说的ascii, gb2312按原理来说，都没有编码这一步，那么它们有字符编码这一说法吗？
答案是的确有。拿gb2312来说，我们就称它字符集是gb2312, 字符编码也是gb2312。然后说它是字符集与字符编码相结合的设计，而说UTF-8只是Unicode字符集的其中一种字符编码，是字符集与字符编码分离的设计。

好了，写到这把。写完后的感觉是：很可能描述的只能我自己看的懂，也可能有错误。如果有发现错误或不懂的，欢迎拍砖～ :)


